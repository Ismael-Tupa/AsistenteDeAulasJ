/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Horario;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ISMAEL
 */
public class vistaHorarios extends javax.swing.JFrame {

    /**
     * Creates new form Vhorarios
     */
    public vistaHorarios() {
        initComponents();
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHorario = new javax.swing.JTable();
        btnNuevoHorario = new javax.swing.JButton();
        btnElejirHorario = new javax.swing.JButton();
        btnEliminarHorario = new javax.swing.JButton();
        btnEditarHorario = new javax.swing.JButton();
        btnSalirHorario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestion de horarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        tablaHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Hora de inicio", "Hora de fin", "Susecion"
            }
        ));
        jScrollPane1.setViewportView(tablaHorario);

        btnNuevoHorario.setText("Nuevo");
        btnNuevoHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoHorarioActionPerformed(evt);
            }
        });

        btnElejirHorario.setText("Elejir");
        btnElejirHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElejirHorarioActionPerformed(evt);
            }
        });

        btnEliminarHorario.setText("Eliminar");

        btnEditarHorario.setText("Editar");

        btnSalirHorario.setText("Salir");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnElejirHorario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditarHorario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarHorario))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevoHorario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSalirHorario, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnNuevoHorario)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnElejirHorario)
                    .addComponent(btnEliminarHorario)
                    .addComponent(btnEditarHorario))
                .addGap(18, 18, 18)
                .addComponent(btnSalirHorario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevoHorarioActionPerformed

    private void btnElejirHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElejirHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnElejirHorarioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnEditarHorario;
    public javax.swing.JButton btnElejirHorario;
    public javax.swing.JButton btnEliminarHorario;
    public javax.swing.JButton btnNuevoHorario;
    public javax.swing.JButton btnSalirHorario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tablaHorario;
    // End of variables declaration//GEN-END:variables

    //metodos staticos de la vista
    public static void listarHorario(vistaHorarios vh,List v){
        Horario horario = new Horario();
        DefaultTableModel modeloT = new DefaultTableModel();
        JTable tabla = vh.tablaHorario;
        modeloT = (DefaultTableModel)tabla.getModel();
        modeloT.setRowCount(0);
        List<Horario>lista = v;
        Object[] object = new Object[4];
        for(int i=0 ; i<lista.size() ; i++){
            object[0] = lista.get(i).getId();
            object[1] = lista.get(i).getHora_i();
            object[2] = lista.get(i).getHora_f();
            object[3] = lista.get(i).getSusecion();
            modeloT.addRow(object);
           
        }
        vh.tablaHorario.setModel(modeloT);
    }
    public static Object entregarRegistro(vistaNuevoHorario hn){
        String hi = hn.inputhoraiHorario.getText().trim();
        String hf = hn.inputhorafHorario.getText().trim();
        int sus = Integer.parseInt((String) hn.inputturnoHorario.getText().trim());
        
        Object[] res = new Object[3];
        res[0] = hi;
        res[1] = hf;
        res[2] = sus;
        return res;  
    }
    public static int eliminarRegistro(vistaHorarios h){
        int fila = h.tablaHorario.getSelectedRow();
        if (fila < -1){
            JOptionPane.showMessageDialog(h, "Debe seleccionar una fila");
        }else{
            int id = Integer.parseInt((String)h.tablaHorario.getValueAt(fila, 0).toString());
            return id;
        }
        return -5;
    }
    public static int modificamos(vistaHorarios v, vistaNuevoHorario vn){
        int fila = v.tablaHorario.getSelectedRow();
            if(fila <= -1){
                JOptionPane.showMessageDialog(v, "Debe seleccionar una fila");
            }
            if(fila > -1){
                vn.setVisible(true);
                String id = (String)v.tablaHorario.getValueAt(fila, 0).toString();
                String hi = (String)v.tablaHorario.getValueAt(fila, 1).toString();
                String hf = (String)v.tablaHorario.getValueAt(fila, 2).toString();
                String sus = (String)v.tablaHorario.getValueAt(fila, 3).toString();
                vn.inputidHorario.setText(id);
                vn.inputhoraiHorario.setText(hi);
                vn.inputhorafHorario.setText(hf);
                vn.inputturnoHorario.setText(sus);
                
            }
        return fila;     
    }
    public static Object modificarRegistro(vistaNuevoHorario vistaNH){ 
        int id = Integer.parseInt((String)vistaNH.inputidHorario.getText().trim());
        String hi = vistaNH.inputhoraiHorario.getText().trim();
        String hf = vistaNH.inputhorafHorario.getText().trim();
        int sus = Integer.parseInt((String)vistaNH.inputturnoHorario.getText().trim());
        Object[] res = new Object[4];
        res[0] = id;
        res[1] = hi;
        res[2] = hf;
        res[3] = sus;
        return res;
    }
}
